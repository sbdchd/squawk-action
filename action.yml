name: "Squawk action"
description: "Lint Postgres migrations with Squawk"
author: sbdchd
branding:
  icon: "check-square"
  color: "blue"

inputs:
  access_token:
    description: "Your GitHub Access Token (default: {{ github.token }})"
    default: "${{ github.token }}"
    required: true
    type: string
  assume-in-transaction:
    description: "Assume in transaction"
    required: false
    default: "false"
    type: boolean
  config:
    description: "Path to a custom config file"
    required: false
    default: ""
    type: string
  exclude:
    description: "Rules to exclude, as a comma-separated string"
    required: false
    type: string
  files:
    description: "Space separated list of file paths to check. Cannot contain glob patterns."
    required: false
    default: ""
    type: string
  fail-on-violations:
    description: "Fail on violations"
    required: false
    default: "false"
    type: boolean
  pattern:
    description: "Glob pattern of files to match. (./migrations/*)"
    required: false
    default: ""
    type: string
  pg-version:
    description: "PostgreSQL version"
    required: false
    type: string
  verbose:
    description: "Verbose output"
    required: false
    default: "true"
    type: boolean
  version:
    description: "Squawk NPM version to install (default: latest)"
    default: "latest"
    required: true
    type: string
runs:
  using: "composite"
  steps:
    - uses: actions/setup-node@v4
      with:
        node-version: 20
    - run: npm install -g squawk-cli@${{inputs.version}}
      shell: bash
    - shell: bash
      run: |
        ASSUME_IN_TRANSACTION="${{ inputs.assume-in-transaction }}"
        CONFIG="${{ inputs.config }}"
        EXCLUDE="${{ inputs.exclude }}"
        FAIL_ON_VIOLATIONS="${{ inputs.fail-on-violations }}"
        FILES="${{ inputs.files }}"
        PATTERN="${{ inputs.pattern }}"
        PG_VERSION="${{ inputs.pg-version }}"
        VERBOSE="${{ inputs.verbose }}"

        COMMAND="squawk"

        if "$ASSUME_IN_TRANSACTION"; then
          COMMAND="$COMMAND --assume-in-transaction"
        fi

        if [ -n "$CONFIG" ]; then
          COMMAND="$COMMAND --config=$CONFIG"
        fi

        if [ -n "$EXCLUDE" ]; then
          COMMAND="$COMMAND --exclude=$EXCLUDE"
        fi

        if [ -n "$PG_VERSION" ]; then
          COMMAND="$COMMAND --pg-version=$PG_VERSION"
        fi

        if "$VERBOSE"; then
          COMMAND="$COMMAND --verbose"
        fi

        # We can only leave a comment when we run on pull_request.
        if [[ "${{ github.event_name }}" == "pull_request" ]]; then
          COMMAND="$COMMAND upload-to-github"
          if "$FAIL_ON_VIOLATIONS"; then
            COMMAND="$COMMAND --fail-on-violations"
          fi
        fi

        if [ -n "$FILES" ]; then
          COMMAND="$COMMAND $FILES"
        fi

        if [ -n "$PATTERN" ]; then
          expandedFiles=$(find . \( -path "./$PATTERN" -or -path "$PATTERN" \) -type f | xargs echo)
          COMMAND="$COMMAND $expandedFiles"
        fi

        export SQUAWK_GITHUB_TOKEN=${{inputs.access_token}}
        export SQUAWK_GITHUB_REPO_OWNER=$(jq --raw-output .repository.owner.login "$GITHUB_EVENT_PATH")
        export SQUAWK_GITHUB_REPO_NAME=$(jq --raw-output .repository.name "$GITHUB_EVENT_PATH")
        export SQUAWK_GITHUB_PR_NUMBER=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")

        echo "Running: $COMMAND"
        sh -c "$COMMAND"
